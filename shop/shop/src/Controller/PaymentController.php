<?php

namespace App\Controller;

use App\Controller\AppController;

/**
 * Payment Controller
 *
 * @property \App\Model\Table\PaymentTable $Payment
 *
 * @method \App\Model\Entity\Payment[]|\Cake\Datasource\ResultSetInterface paginate($object = null, array $settings = [])
 */
class PaymentController extends AppController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadModel('Payment');
    }

    public function index()
    {
        $this->paginate = [
            'limit' => '5'
        ];
        $pay = $this->paginate($this->Payment->find()->order(['id' => 'DESC']));
        $this->set(compact('pay'));
    }

    public function add()
    {
        $pay = $this->Payment->newEntity();
        if ($this->request->is('post')) {
            $input['link'] = $this->getRequest()->getData('link');
            $input['status'] = $this->getRequest()->getData('status');
            $uploaded_path = "/img/upload";
            $tmp_name = $this->request->getData()['file']['tmp_name'];
            $image_name = $this->request->getData()['file']['name'];
            $setNewFileName = time() . "_" . rand(000000, 999999) . $image_name;
            if (move_uploaded_file($tmp_name, WWW_ROOT . $uploaded_path . "/" . $setNewFileName)) {
                $pay->image = $uploaded_path . "/" . $setNewFileName;
            }
            $this->Payment->patchEntity($pay, $input);
            if ($this->Payment->save($pay)) {
                $this->set(compact('pay'));
                return $this->redirect(['controller' => 'Payment', 'action' => 'index']);
            } else {
                $error = $pay->getErrors();
                $this->set('err', $error);
            }
        }
        $this->set(compact('pay'));
    }

    public function edit()
    {
        $id = $this->request->getParam('id');
        $pay = $this->Payment->get($id);
        $this->set('pay', $pay);
        if ($this->request->is('post')) {
            $input['link'] = $this->getRequest()->getData('link');
            $input['status'] = $this->getRequest()->getData('status');
            $uploaded_path = "/img/upload";
            $tmp_name = $this->request->getData()['file']['tmp_name'];
            $image_name = $this->request->getData()['file']['name'];
            $setNewFileName = time() . "_" . rand(000000, 999999) . $image_name;
            if (move_uploaded_file($tmp_name, WWW_ROOT . $uploaded_path . "/" . $setNewFileName)) {
                $pay->image = $uploaded_path . "/" . $setNewFileName;
            }
            $this->Payment->patchEntity($pay, $input);
            if ($this->Payment->save($pay)) {
                $this->set(compact('pay'));
                return $this->redirect(['controller' => 'Payment', 'action' => 'index']);
            } else {
                $error = $pay->getErrors();
                $this->set('err', $error);
            }
        }
        $this->set(compact('pay'));
    }

    public function delete()
    {
        $id = $this->request->getParam('id');
        $pay = $this->Payment->get($id);
        $this->Payment->delete($pay);
        return $this->redirect(['controller' => 'Payment', 'action' => 'index']);
    }

    public function search()
    {
        $search = $this->request->getQuery('q');
        $this->paginate = [
            'limit' => '3'
        ];
        $pay = $this->paginate($this->Payment->find()->where(function ($exp, $query) use ($search) {
            return $exp->like('link', '%' . $search . '%');
        }));
        $this->set('pay', $pay);
        $this->set('search', $search);
    }
}
