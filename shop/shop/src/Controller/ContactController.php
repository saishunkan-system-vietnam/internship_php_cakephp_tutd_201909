<?php

namespace App\Controller;

use App\Controller\AppController;

/**
 * Contact Controller
 *
 * @property \App\Model\Table\ContactTable $Contact
 *
 * @method \App\Model\Entity\Contact[]|\Cake\Datasource\ResultSetInterface paginate($object = null, array $settings = [])
 */
class ContactController extends AppController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadModel('Contact');
    }

    public function index()
    {
        $this->paginate = [
            'limit' => '5'
        ];
        $contact = $this->paginate($this->Contact->find()->order(['id' => 'DESC']));
        $this->set(compact('contact'));
    }

    public function add()
    {
        $contact = $this->Contact->newEntity();
        if ($this->request->is('post')) {
            $input['addr'] = $this->getRequest()->getData('addr');
            $input['phone'] = $this->getRequest()->getData('phone');
            $input['email'] = $this->getRequest()->getData('email');
            $input['status'] = $this->getRequest()->getData('status');

            $this->Contact->patchEntity($contact, $input);
            if ($this->Contact->save($contact)) {
                return $this->redirect(['controller'=>'Contact','action' => 'index']);
            } else {
                $error = $contact->getErrors();
                $this->set('err', $error);
            }
        }
        $this->set(compact('contact'));
    }

    public function edit()
    {
        $id = $this->request->getParam('id');
        $contact = $this->Contact->get($id);
        $this->set('contact', $contact);
        if ($this->request->is('post')) {
            $input['addr'] = $this->getRequest()->getData('addr');
            $input['phone'] = $this->getRequest()->getData('phone');
            $input['email'] = $this->getRequest()->getData('email');
            $input['status'] = $this->getRequest()->getData('status');

            $this->Contact->patchEntity($contact, $input,['validate'=>'update']);
            if ($this->Contact->save($contact)) {
                return $this->redirect(['controller'=>'Contact','action' => 'index']);
            } else {
                $error = $contact->getErrors();
                $this->set('err', $error);
            }
        }
        $this->set(compact('contact'));
    }

    public function delete()
    {
        $id = $this->request->getParam('id');
        $contact = $this->Contact->get($id);
        $this->Contact->delete($contact);
        return $this->redirect(['controller'=>'Contact','action' => 'index']);
    }

    public function search()
    {
        $search = $this->request->getQuery('q');
        $this->paginate = [
            'limit' => '3'
        ];
        $contact = $this->paginate($this->Contact->find()->where(function ($exp, $query) use ($search) {
            return $exp->like('username', '%' . $search . '%');
        }));
        $this->set('contact', $contact);
    }
}
