<?php
/**
 * CakePHP(tm) : Rapid Development Framework (https://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 * @link      https://cakephp.org CakePHP(tm) Project
 * @since     0.2.9
 * @license   https://opensource.org/licenses/mit-license.php MIT License
 */

namespace App\Controller;

use App\Model\Entity\Slider;
use Cake\Core\Configure;
use Cake\Http\Exception\ForbiddenException;
use Cake\Http\Exception\NotFoundException;
use Cake\View\Exception\MissingTemplateException;

/**
 * Static content controller
 *
 * This controller will render views from Template/Pages/
 *
 * @link https://book.cakephp.org/3.0/en/controllers/pages-controller.html
 */
class PagesController extends AppController
{

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
//     $this->viewBuilder()->getLayout("fontendefault");
        $this->viewBuilder()->setLayout("fontendefault");
        $this->loadModel('Logo');
        $this->loadModel('Slider');
        $this->loadModel('Represent');
        $this->loadModel('Categories');
        $this->loadModel('Products');
    }

    /**
     * Displays a view
     *
     * @param array ...$path Path segments.
     * @return \Cake\Http\Response|null
     * @throws \Cake\Http\Exception\ForbiddenException When a directory traversal attempt.
     * @throws \Cake\Http\Exception\NotFoundException When the view file could not
     *   be found or \Cake\View\Exception\MissingTemplateException in debug mode.
     */
    public function display(...$path)
    {
        $count = count($path);
        if (!$count) {
            return $this->redirect('/');
        }
        if (in_array('..', $path, true) || in_array('.', $path, true)) {
            throw new ForbiddenException();
        }
        $page = $subpage = null;

        if (!empty($path[0])) {
            $page = $path[0];
        }
        if (!empty($path[1])) {
            $subpage = $path[1];
        }
        $this->set(compact('page', 'subpage'));

        try {
            $this->render(implode('/', $path));
        } catch (MissingTemplateException $exception) {
            if (Configure::read('debug')) {
                throw $exception;
            }
            throw new NotFoundException();
        }
    }

    public function index()
    {
        $logo = $this->Logo
            ->find()
            ->select('image', 'link')
            ->where(['status' => 1]);
        $this->set(compact('logo'));
        //slider
        $slider = $this->Slider
            ->find()
            ->select(['name', 'link', 'image', 'text', 'id'])
            ->where(['status' => 1]);

//        dd($slider->toArray());
        $this->set(compact('slider'));

        //Đại diện
        $represent = $this->Represent
            ->find()
            ->select(['name', 'image', 'status'])
            ->where(['status' => 1])
            ->limit(3)
            ->order(['id' => 'DESC']);
        $this->set(compact('represent'));

        //products-title
        $title = $this->Categories
            ->find()
            ->select(['id', 'name', 'parent_id', 'slug'])
            ->where(['status' => 1])
            ->limit(4)
            ->order(['id' => 'DESC']);
        $this->set(compact('title'));

        //products
        $products = $this->Products->find()
            ->select(['id', 'product_name', 'image', 'price', 'sale', 'description', 'size', 'slug', 'categories_id', 'status'])
            ->where(['status' => 1])
            ->andwhere(['categories_id'=>24])
            ->limit(8)
            ->order(['id' => 'ASC'])->toArray();

        $this->set('products',$products);

    }
}
