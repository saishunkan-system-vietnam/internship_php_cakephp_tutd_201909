<?php

namespace App\Controller;

use App\Controller\AppController;

/**
 * ProductsClient Controller
 *
 *
 * @method \App\Model\Entity\ProductsClient[]|\Cake\Datasource\ResultSetInterface paginate($object = null, array $settings = [])
 */
class ProductsClientController extends AppController
{
    /**
     * Index method
     *
     * @return \Cake\Http\Response|null
     */

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
//     $this->viewBuilder()->getLayout("fontendefault");
        $this->viewBuilder()->setLayout("cartfontend");
        $this->loadModel('Logo');
        $this->loadModel('Slider');
        $this->loadModel('Represent');
        $this->loadModel('Categories');
        $this->loadModel('Products');
        $this->loadModel('Shopon');
        $this->loadModel('Logolast');
        $this->loadModel('Usersclient');
        $this->loadModel('Contact');
    }

    public function productss()
    {
        $productss = $this->Products->find()
            ->select(['id','image', 'product_name', 'price', 'sale', 'description', 'size', 'slug', 'status', 'categories_id'])
            ->where(['status' => 1])
            ->toArray();
//        dd($productss);
        $this->set(compact('productss'));
//        dd($productss);
//        dd($productss);
    }

//    public function products()
//    {
//        //products
//        $products = $this->Products->find()
//            ->select(['id', 'product_name', 'image', 'price', 'sale', 'description', 'size', 'slug', 'categories_id', 'status'])
//            ->where(['status' => 1])
//            ->andwhere(['categories_id' => 24])
//            ->limit(8)
//            ->order(['id' => 'ASC'])->toArray();
//        $this->set('products', $products);
//    }

    public function logo()
    {
        $logo = $this->Logo
            ->find()
            ->select('image', 'link')
            ->where(['status' => 1]);
        $this->set(compact('logo'));
    }

    public function slider()
    {
        $slider = $this->Slider
            ->find()
            ->select(['name', 'link', 'image', 'text', 'id'])
            ->where(['status' => 1])
            ->limit(1);

        $this->set(compact('slider'));
    }

    //dai dien
    public function represent()
    {
        $represent = $this->Represent
            ->find()
            ->select(['name', 'image', 'status'])
            ->where(['status' => 1])
            ->limit(3)
            ->order(['id' => 'DESC']);
        $this->set(compact('represent'));

    }

    //products-title
    public function title()
    {
        $title = $this->Categories
            ->find()
            ->select(['id', 'name', 'parent_id', 'slug'])
            ->where(['status' => 1])
            ->limit(4)
            ->order(['id' => 'DESC']);
        $this->set(compact('title'));
    }

    //$logolast
    public function logolast()
    {
        $logolast = $this->Logolast->find()
            ->select(['id', 'link', 'image', 'text', 'status'])
            ->where(['status' => 1])
            ->limit(1)
            ->order(['id' => 'DESC'])->toArray();
        $this->set('logolast', $logolast);
    }

    public function users()
    {
        $users = $this->Usersclient->newEntity();
        if ($this->request->is('post')) {
            $input['name'] = $this->getRequest()->getData('name');
            $input['email'] = $this->getRequest()->getData('email');
            $input['password'] = md5($this->getRequest()->getData('password'));
            $this->Usersclient->patchEntity($users, $input);
            if ($this->Usersclient->save($users)) {
                $this->set(compact('users'));
                $this->Flash->success(__('ok'));
            } else {
                $error = $users->getErrors();
                $this->set('err', $error);
            }
        }
        $this->set(compact('users'));
    }

    //login client
    public function loginclient()
    {
        if (isset($_POST['submit'])) {
            $email = $_POST['email'];
            $password = $_POST['password'];
            $userr = $this->Usersclient->find()
                ->select(['id', 'name', 'email', 'password'])
                ->where(['email' => $email])
                ->orwhere(['password' => $password])
                ->all()->toArray();
            $showEmail = $userr[0];
            $this->set('showEmail', $showEmail);
        }
    }

    public function product()
    {
        $this->logo();
        $this->slider();
        $this->represent();
        $this->logolast();
        $this->title();
        $this->users();
        $this->loginclient();
        $this->productss();
//        $this->products();
    }


}
